_BUILDTIME_COREDDS_HOME="@CoreDDS_HOME@"

# Give priority to the CoreDDS installation found when the workspace was built, if it's valid.
# If it's not valid, the current value of the COREDDS_HOME environment variable will be used.
# The one detected at buildtime may refer to an invalid path for users using "fat archive" binaries, for example.
if [ -d "$_BUILDTIME_COREDDS_HOME" ]; then
  if [ ! -z "$COREDDS_HOME" -a "$COREDDS_HOME" != "$_BUILDTIME_COREDDS_HOME" ]; then
    echo "[coredds_cmake_module] Warning: COREDDS_HOME environment variable is set to [[$COREDDS_HOME]]." \
      "When the workspace was built, CoreDDS was found at [[$_BUILDTIME_COREDDS_HOME]]," \
      "which is what will actually be used." \
      "Manually modify the environment now if this is not the configuration you want." 1>&2
  fi
  _COREDDS_HOME_TO_USE=$_BUILDTIME_COREDDS_HOME
else
  if [ -z "$COREDDS_HOME" ]; then
    echo "[coredds_cmake_module] Warning:" \
      "The location at which CoreDDS was found when the workspace was built [[$_BUILDTIME_COREDDS_HOME]]" \
      "does not point to a valid directory, and the COREDDS_HOME environment variable has not been set." \
      "Support for CoreDDS will not be available." 1>&2
    unset _BUILDTIME_COREDDS_HOME
    return
  fi

  if [ ! -d "$COREDDS_HOME" ]; then
    echo "[coredds_cmake_module] Warning:" \
      "Neither the location at which CoreDDS was found when the workspace was built [[$_BUILDTIME_COREDDS_HOME]]" \
      "nor the CoreDDS_HOME environment variable [[$COREDDS_HOME]] point to a valid directory". \
      "Support for CoreDDS will not be available." 1>&2
    unset _BUILDTIME_COREDDS_HOME
    return
  fi
  _COREDDS_HOME_TO_USE=$COREDDS_HOME
fi

export COREDDS_HOME="$_COREDDS_HOME_TO_USE"

# detect if running on Darwin platform
_UNAME=`uname -s`
_IS_DARWIN=0
if [ "$_UNAME" = "Darwin" ]; then
  _IS_DARWIN=1
fi
unset _UNAME

if [ $_IS_DARWIN -eq 0 ]; then
  _LIB_PATH=LD_LIBRARY_PATH
else
  _LIB_PATH=DYLD_LIBRARY_PATH
fi

eval _PATHS=\"\$$_LIB_PATH\"
if [ -z "$_PATHS" ]; then
  eval export $_LIB_PATH=\"$COREDDS_HOME/lib\"
else
  _IFS_SAVE=$IFS
  IFS=':'
  if [ "$AMENT_SHELL" = "zsh" ]; then
    ament_zsh_to_array _PATHS
  fi
  for _PATH in $_PATHS; do
    if [ -n "$_PATH" -a "$_PATH" = "$COREDDS_HOME/lib" ]; then
      _FLAG=1
    fi
  done
  if [ -z "$_FLAG" ]; then
    eval export $_LIB_PATH=\"$COREDDS_HOME/lib:\$$_LIB_PATH\"
  fi
  IFS=$_IFS_SAVE
  unset _IFS_SAVE
  unset _FLAG
fi
unset _PATHS

unset _LIB_PATH
unset _IS_DARWIN

unset _COREDDS_HOME_TO_USE
unset _BUILDTIME_COREDDS_HOME
